name: CI Pipeline # Continuous Integration Workflow

on:
  push:
    branches: [ main ] # Trigger on push to main branch
    paths-ignore:
        - 'k8s/deployment.yaml' # Ignore changes to deployment file
  pull_request:
    branches: [ main ] # Trigger on pull requests to main branch

jobs:             # Define jobs in the CI pipeline
  build:          # Build Job
    runs-on: ubuntu-latest # Build job

    steps:
      - name: Checkout code  # Checkout code from repository
        uses: actions/checkout@v3 

      - name: Set up Python  # Set up Python environment
        uses: actions/setup-python@v4   
        with:
          python-version: '3.10'

      - name: Install dependencies # Install Python dependencies
        run: |
          python -m pip install --upgrade pip 
          pip install -r app/requirements.txt

      - name: Run application test # Run tests for the application
        run: |
          echo "Hello world test passed!"  # Replace with real tests

  code-quality:              # Code Quality Job
    runs-on: ubuntu-latest
    needs: build

    steps:                 # Code quality checks     
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Flake8
        run: pip install flake8

      - name: Run Flake8 # Run code quality checks using Flake8
        run: flake8 app

  docker-build:          # Container image build & publish
    runs-on: ubuntu-latest
    needs: code-quality

    steps:            # Docker build and push steps
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Install Docker
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Registry # Authenticate with Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{secrets.DOCKER_USERNAME}}
          password: ${{secrets.DOCKER_TOKEN}}

      - name: Docker Push # Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: app/  
          file: Dockerfile 
          push: true
          tags: ${{secrets.DOCKER_USERNAME}}/flaskapp:${{github.run_id}} # Use run ID as tag

  update-k8s:          # Update Kubernetes Deployment Job
    runs-on: ubuntu-latest   
    needs: docker-build
    steps:
      - name: Checkout code 
        uses: actions/checkout@v3 
        with:
            token: ${{secrets.GIT_TOKEN}}     # Use a Git token to push changes     

      - name: Update Kubernetes manifest  # Update deployment image in k8s manifest
        run: |
          sed -i "s|image:.*|image: ${{secrets.DOCKER_USERNAME}}/flaskapp:${{github.run_id}}|" k8s/deployment.yaml
          cat k8s/deployment.yaml
      - name: Commit changes       # Commit updated deployment file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "[skip ci] Update deployment image to $IMAGE_NAME:${{github.run_id}}" # Skip CI for this commit
          file_pattern: 'k8s/deployment.yaml'
          run: git push
          token: ${{secrets.GIT_TOKEN}}    # Push changes to the repository
        
    

